{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/Personal/projects/react parking/src/components/admin/adminActions.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Button from '../Button';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as ReactDOM from 'react-dom/client'; // import Add from \"./functions\"\n\nimport ErrorDisplay from '../ErrorDisplay';\nimport { CheckApiResponse } from '../functions/CheckApiResponse';\nimport { Hash } from '../functions/Hash';\nimport HashPassword from '../functions/HashPassword';\nimport PageHeading from '../PageHeading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar baseURL = 'http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/admins';\nexport function ShowAdmins(_ref) {\n  let {\n    adminList,\n    selectedAdminList,\n    setSelectedAdminList\n  } = _ref;\n  // alert(Add(3,4))\n  // <h1 className=\"pb-2\">List Of Admins</h1>\n  var elementType = [{\n    value: 'id',\n    name: 'ID'\n  }, {\n    value: 'fullName',\n    name: 'Full Name'\n  }, {\n    value: 'phone',\n    name: 'Phone'\n  }, {\n    value: 'email',\n    name: 'Email'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      userType: \"Admins\" // onclick={() => alert('yello')}\n      ,\n      fullData: adminList,\n      data: selectedAdminList,\n      setter: setSelectedAdminList,\n      elementType: elementType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"new\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"\",\n                bgColor: \"var(--primary-color)\",\n                name: \"Add Admin\",\n                id: \"addAdminBtn\",\n                className: \"btn px-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"tableDataField\",\n        children: selectedAdminList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.passwordHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"edit\",\n                state: {\n                  item: item\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"\",\n                  bgColor: \"\",\n                  name: \"Edit\",\n                  id: item.id,\n                  className: \"btn editBtn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"\",\n                bgColor: \"\",\n                name: \"Delete\",\n                id: item.id,\n                className: \"btn deleteButton ms-1\",\n                onclick: () => DeleteAdmin(item.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = ShowAdmins;\nexport function NewAdmin() {\n  _s();\n\n  let navigate = useNavigate();\n  const [id, setId] = useState();\n  const [fullName, setFullName] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [passwordHash, setPasswordHash] = useState();\n  const [confirmpsdd, setConfirmPsdd] = useState();\n  const [defaultAdmin, setDefaultAdmin] = useState(false);\n  const [hashedPasdd, setHashedPasdd] = useState([]);\n\n  async function newAdminAction() {\n    if (confirmpsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Your Password Doesn't Match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this));\n    } else {\n      // setPasswordHash(hash(passwordHash))\n      // setConfirmPsdd(hash(confirmpsdd))\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json'\n      };\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        defaultAdmin\n      });\n      fetch('http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/admins/', {\n        method: 'POST',\n        body: bodyContent,\n        headers: headersList\n      }).then(function (response) {\n        return response;\n      }).then(function (data) {\n        CheckApiResponse(data, data.json());\n      });\n    }\n  }\n\n  async function hash(params) {\n    var test = setHashedPasdd(await params);\n  }\n\n  useEffect(() => {\n    setHashedPasdd([]); // setHashedPasdd(HashPassword(passwordHash) )\n\n    var testt = HashPassword(passwordHash);\n    console.log(HashPassword(passwordHash));\n    console.log(testt); // console.log(hashedPasdd) \n  }, [passwordHash]); // useEffect(()=>{\n  //   alert(\"\")\n  // },[testt])\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    id: \"add-admin-form\",\n    action: \"\",\n    method: \"\",\n    onSubmit: e => {\n      e.preventDefault();\n      newAdminAction();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeader\",\n      children: \"New Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fullName\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        required: true,\n        oninvalid: \"input_error('fullName')\",\n        onChange: e => {\n          setFullName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fullNameError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tell\",\n        className: \"form-control tell\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        required: true,\n        oninvalid: \"input_error('phone')\",\n        onChange: e => {\n          setPhone(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"phoneError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control email\",\n        id: \"email\",\n        placeholder: \"Email : example@email.com\",\n        name: \"email\",\n        required: true,\n        oninvalid: \"input_error('email')\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        required: true,\n        oninvalid: \"input_error('password')\",\n        onChange: e => {\n          setPasswordHash(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"confirmPassword\",\n        id: \"confirmPsdd\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        required: true,\n        oninvalid: \"input_error('confirmPassword')\",\n        onChange: e => {\n          setConfirmPsdd(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-customized buttonWider\",\n      id: \"addBtn\",\n      onSubmit: \"displayOverviewPage()\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewAdmin, \"o2YPiWutRT+FC9UGMyZNNqj3Tpc=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = NewAdmin;\n\nfunction DeleteAdmin(id) {\n  let confirmation = window.confirm('you sure you want to delete the admin');\n\n  if (confirmation) {\n    fetch(`${baseURL}/${id}`, {\n      method: 'DELETE'\n    }).then(resp => {\n      resp.json();\n    });\n    window.location.reload();\n  }\n}\n\n_c3 = DeleteAdmin;\nexport function EditAdmin() {\n  _s2();\n\n  const location = useLocation();\n  const {\n    item\n  } = location.state;\n  let navigate = useNavigate();\n  const [id, setId] = useState(item.id);\n  const [fullName, setFullName] = useState(item.fullName);\n  const [phone, setPhone] = useState(item.phone);\n  const [email, setEmail] = useState(item.email);\n  const [passwordHash, setPasswordHash] = useState(item.passwordHash);\n  const [confirmPsdd, setconfirmPsdd] = useState(item.passwordHash);\n  const [defaultAdmin, setDefaultAdmin] = useState(item.defaultAdmin);\n\n  function editAdminAction() {\n    if (confirmPsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Your Password Doesn't Match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this));\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json'\n      };\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        defaultAdmin\n      });\n      fetch(`${baseURL}/${item.id}`, {\n        method: 'PATCH',\n        body: bodyContent,\n        headers: headersList\n      }).then(function (data) {\n        // console.log(data);\n        CheckApiResponse(data, data.json());\n      });\n    } // window.location.replace(\"/\")\n    // navigate(`../`);\n    // window.location.reload();\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    id: \"add-admin-form\",\n    action: \"\",\n    method: \"\",\n    onSubmit: e => {\n      editAdminAction();\n      e.preventDefault(); // console.log(data)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeader\",\n      children: \"Edit Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fullName\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        oninvalid: \"input_error('fullName')\",\n        onChange: e => {\n          setFullName(e.target.value);\n        },\n        value: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fullNameError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tell\",\n        className: \"form-control tell\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        oninvalid: \"input_error('phone')\",\n        onChange: e => {\n          setPhone(e.target.value);\n        },\n        value: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"phoneError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control email\",\n        id: \"email\",\n        placeholder: \"Email : example@email.com\",\n        name: \"email\",\n        oninvalid: \"input_error('email')\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        oninvalid: \"input_error('password')\",\n        onChange: e => {\n          setPasswordHash(e.target.value);\n        },\n        value: passwordHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"confirmPassword\",\n        id: \"confirmPsdd\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        oninvalid: \"input_error('confirmPassword')\",\n        onChange: e => {\n          setconfirmPsdd(e.target.value);\n        },\n        value: confirmPsdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-customized buttonWider\",\n      id: \"addBtn\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EditAdmin, \"CiOMXTgCsLqr9pYImUMx22grQTc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c4 = EditAdmin;\n\nasync function hash(toBeHashed) {\n  let hashed = await HashPassword(toBeHashed);\n  return hashed;\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowAdmins\");\n$RefreshReg$(_c2, \"NewAdmin\");\n$RefreshReg$(_c3, \"DeleteAdmin\");\n$RefreshReg$(_c4, \"EditAdmin\");","map":{"version":3,"sources":["/home/kb/Desktop/Personal/projects/react parking/src/components/admin/adminActions.js"],"names":["Button","Link","useLocation","useEffect","useState","useNavigate","ReactDOM","ErrorDisplay","CheckApiResponse","Hash","HashPassword","PageHeading","baseURL","ShowAdmins","adminList","selectedAdminList","setSelectedAdminList","elementType","value","name","map","item","id","fullName","phone","email","passwordHash","DeleteAdmin","NewAdmin","navigate","setId","setFullName","setPhone","setEmail","setPasswordHash","confirmpsdd","setConfirmPsdd","defaultAdmin","setDefaultAdmin","hashedPasdd","setHashedPasdd","newAdminAction","root","createRoot","document","getElementById","render","headersList","Accept","bodyContent","JSON","stringify","fetch","method","body","headers","then","response","data","json","hash","params","test","testt","console","log","e","preventDefault","target","confirmation","window","confirm","resp","location","reload","EditAdmin","state","confirmPsdd","setconfirmPsdd","editAdminAction","toBeHashed","hashed"],"mappings":"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","sourcesContent":["import Button from '../Button';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as ReactDOM from 'react-dom/client';\n\n// import Add from \"./functions\"\n\nimport ErrorDisplay from '../ErrorDisplay';\nimport { CheckApiResponse } from '../functions/CheckApiResponse';\nimport { Hash } from '../functions/Hash';\nimport HashPassword from '../functions/HashPassword';\nimport PageHeading from '../PageHeading';\n\nvar baseURL = 'http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/admins';\nexport function ShowAdmins({ adminList,selectedAdminList, setSelectedAdminList }) {\n  // alert(Add(3,4))\n  // <h1 className=\"pb-2\">List Of Admins</h1>\n  var elementType = [\n    { value: 'id', name: 'ID' },\n    { value: 'fullName', name: 'Full Name' },\n    { value: 'phone', name: 'Phone' },\n    { value: 'email', name: 'Email' },\n\n  ];\n  return (\n    <div className=\"\">\n      <PageHeading\n        userType=\"Admins\"\n        // onclick={() => alert('yello')}\n        fullData={adminList}\n        data={selectedAdminList}\n        setter={setSelectedAdminList}\n        elementType={elementType}\n      />\n      <table className=\"table table-striped\">\n        <tbody className=\"\">\n          <tr>\n            <th>Id</th>\n            <th>Full Name</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Password</th>\n            <th>\n              <Link to=\"new\">\n                <Button\n                  color=\"\"\n                  bgColor=\"var(--primary-color)\"\n                  name=\"Add Admin\"\n                  id=\"addAdminBtn\"\n                  className=\"btn px-4\"\n                />\n              </Link>\n            </th>\n          </tr>\n        </tbody>\n        <tbody id=\"tableDataField\">\n          {selectedAdminList.map((item) => {\n            return (\n              <tr>\n                <td>{item.id}</td>\n                <td>{item.fullName}</td>\n                <td>{item.phone}</td>\n                <td>{item.email}</td>\n                <td>{item.passwordHash}</td>\n                <td>\n                  <Link to=\"edit\" state={{ item: item }}>\n                    <Button\n                      color=\"\"\n                      bgColor=\"\"\n                      name=\"Edit\"\n                      id={item.id}\n                      className=\"btn editBtn\"\n                    />\n                  </Link>\n                  <Button\n                    color=\"\"\n                    bgColor=\"\"\n                    name=\"Delete\"\n                    id={item.id}\n                    className=\"btn deleteButton ms-1\"\n                    onclick={() => DeleteAdmin(item.id)}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport function NewAdmin() {\n  let navigate = useNavigate();\n\n  const [id, setId] = useState();\n  const [fullName, setFullName] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [passwordHash, setPasswordHash] = useState();\n  const [confirmpsdd, setConfirmPsdd] = useState();\n  const [defaultAdmin, setDefaultAdmin] = useState(false);\n  const [hashedPasdd, setHashedPasdd] = useState([]);\n\n\n  async function newAdminAction() {\n    if (confirmpsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n      root.render(\n        <ErrorDisplay\n          design=\"text-danger\"\n          message=\"Your Password Doesn't Match!\"\n        />\n      );\n    } else {\n      // setPasswordHash(hash(passwordHash))\n      // setConfirmPsdd(hash(confirmpsdd))\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json',\n      };\n\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        defaultAdmin,\n      });\n\n      fetch('http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/admins/', {\n        method: 'POST',\n        body: bodyContent,\n        headers: headersList,\n      })\n        .then(function (response) {\n          return response;\n        })\n        .then(function (data) {\n          CheckApiResponse(data, data.json());\n        });\n    }\n  }\n\n  async function hash(params) {\n\n    var test =  setHashedPasdd( await params)\n\n    \n  }\n\n  useEffect(()=>{\n\n    setHashedPasdd([])\n    // setHashedPasdd(HashPassword(passwordHash) )\n\n    var testt = HashPassword(passwordHash)\n\n    console.log(HashPassword(passwordHash) )\n\n    console.log(testt)\n\n    // console.log(hashedPasdd) \n\n  },[passwordHash])\n\n  // useEffect(()=>{\n  //   alert(\"\")\n  // },[testt])\n\n\n  return (\n    <form\n      className=\"form\"\n      id=\"add-admin-form\"\n      action=\"\"\n      method=\"\"\n      onSubmit={(e) => {\n        e.preventDefault();\n\n        newAdminAction();\n      }}\n    >\n      <h1 id=\"formHeader\">New Admin</h1>\n      <div className=\"form-group\">\n        <label for=\"fullName\">Full Name:</label>\n        <input\n          type=\"text\"\n          className=\"form-control \"\n          id=\"fullName\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          required\n          oninvalid=\"input_error('fullName')\"\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n        />\n        <div id=\"fullNameError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"phone\">Phone:</label>\n        <input\n          type=\"tell\"\n          className=\"form-control tell\"\n          id=\"phone\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          required\n          oninvalid=\"input_error('phone')\"\n          onChange={(e) => {\n            setPhone(e.target.value);\n          }}\n        />\n        <div id=\"phoneError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          className=\"form-control email\"\n          id=\"email\"\n          placeholder=\"Email : example@email.com\"\n          name=\"email\"\n          required\n          oninvalid=\"input_error('email')\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <div id=\"emailError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          required\n          oninvalid=\"input_error('password')\"\n          onChange={(e) => {\n            setPasswordHash(e.target.value);\n          }}\n        />\n        <div id=\"passwordError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"confirmPassword\" id=\"confirmPsdd\">\n          Confirm Password:\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          name=\"confirmPassword\"\n          required\n          oninvalid=\"input_error('confirmPassword')\"\n          onChange={(e) => {\n            setConfirmPsdd(e.target.value);\n          }}\n        />\n        <div id=\"confirmPasswordError\" className=\"errorOutput\"></div>\n      </div>\n      <div id=\"errorDisplay\"></div>\n      <br />\n      <button\n        className=\"btn btn-customized buttonWider\"\n        id=\"addBtn\"\n        onSubmit=\"displayOverviewPage()\"\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n\nfunction DeleteAdmin(id) {\n  let confirmation = window.confirm('you sure you want to delete the admin');\n\n  if (confirmation) {\n    fetch(`${baseURL}/${id}`, {\n      method: 'DELETE',\n    }).then((resp) => {\n      resp.json();\n    });\n\n    window.location.reload();\n  }\n}\n\nexport function EditAdmin() {\n  const location = useLocation();\n  const { item } = location.state;\n\n  let navigate = useNavigate();\n\n  const [id, setId] = useState(item.id);\n  const [fullName, setFullName] = useState(item.fullName);\n  const [phone, setPhone] = useState(item.phone);\n  const [email, setEmail] = useState(item.email);\n  const [passwordHash, setPasswordHash] = useState(item.passwordHash);\n  const [confirmPsdd, setconfirmPsdd] = useState(item.passwordHash);\n\n  const [defaultAdmin, setDefaultAdmin] = useState(item.defaultAdmin);\n\n  function editAdminAction() {\n    if (confirmPsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n      root.render(\n        <ErrorDisplay\n          design=\"text-danger\"\n          message=\"Your Password Doesn't Match!\"\n        />\n      );\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json',\n      };\n\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        defaultAdmin,\n      });\n\n      fetch(`${baseURL}/${item.id}`, {\n        method: 'PATCH',\n        body: bodyContent,\n        headers: headersList,\n      }).then(function (data) {\n        // console.log(data);\n        CheckApiResponse(data, data.json());\n      });\n    }\n    // window.location.replace(\"/\")\n    // navigate(`../`);\n    // window.location.reload();\n  }\n  return (\n    <form\n      className=\"form\"\n      id=\"add-admin-form\"\n      action=\"\"\n      method=\"\"\n      onSubmit={(e) => {\n        editAdminAction();\n        e.preventDefault();\n        // console.log(data)\n      }}\n    >\n      <h1 id=\"formHeader\">Edit Admin</h1>\n      <div className=\"form-group\">\n        <label for=\"fullName\">Full Name:</label>\n        <input\n          type=\"text\"\n          className=\"form-control \"\n          id=\"fullName\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          oninvalid=\"input_error('fullName')\"\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n          value={fullName}\n        />\n        <div id=\"fullNameError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"phone\">Phone:</label>\n        <input\n          type=\"tell\"\n          className=\"form-control tell\"\n          id=\"phone\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          oninvalid=\"input_error('phone')\"\n          onChange={(e) => {\n            setPhone(e.target.value);\n          }}\n          value={phone}\n        />\n        <div id=\"phoneError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          className=\"form-control email\"\n          id=\"email\"\n          placeholder=\"Email : example@email.com\"\n          name=\"email\"\n          oninvalid=\"input_error('email')\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          value={email}\n        />\n        <div id=\"emailError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          oninvalid=\"input_error('password')\"\n          onChange={(e) => {\n            setPasswordHash(e.target.value);\n          }}\n          value={passwordHash}\n        />\n        <div id=\"passwordError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"confirmPassword\" id=\"confirmPsdd\">\n          Confirm Password:\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          name=\"confirmPassword\"\n          oninvalid=\"input_error('confirmPassword')\"\n          onChange={(e) => {\n            setconfirmPsdd(e.target.value);\n          }}\n          value={confirmPsdd}\n        />\n        <div id=\"confirmPasswordError\" className=\"errorOutput\"></div>\n      </div>\n      <div id=\"errorDisplay\"></div>\n      <br />\n      <button className=\"btn btn-customized buttonWider\" id=\"addBtn\">\n        Save\n      </button>\n    </form>\n  );\n}\n\nasync function hash(toBeHashed) {\n  let hashed = await HashPassword(toBeHashed);\n  return hashed;\n}\n"]},"metadata":{},"sourceType":"module"}