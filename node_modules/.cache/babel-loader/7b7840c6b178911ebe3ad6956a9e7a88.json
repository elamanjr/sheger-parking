{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/Personal/projects/react parking/src/components/staff/staffActions.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport Button from '../Button';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport ErrorDisplay from '../ErrorDisplay';\nimport * as ReactDOM from 'react-dom/client';\nimport { CheckApiResponse } from '../functions/CheckApiResponse';\nimport PageHeading from '../PageHeading';\nimport { Hash } from '../functions/Hash';\nimport UpdateAddState from '../functions/UpdateState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = 'http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/staffs';\nexport function ShowStaffs(_ref) {\n  let {\n    staffList,\n    selectedStaffList,\n    setSelectedStaffList\n  } = _ref;\n  var elementType = [{\n    value: 'id',\n    name: 'ID'\n  }, {\n    value: 'fullName',\n    name: 'Full Name'\n  }, {\n    value: 'phone',\n    name: 'Phone'\n  }, {\n    value: 'email',\n    name: 'Email'\n  }, {\n    value: 'branch',\n    name: 'Branch'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeading, {\n      userType: \"Staff\" // onclick={() => alert('yello')}\n      ,\n      fullData: staffList,\n      data: selectedStaffList,\n      setter: setSelectedStaffList,\n      elementType: elementType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"tbody\", {\n        className: \"\",\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"new\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"\",\n                bgColor: \"var(--primary-color)\",\n                name: \"Add Staff\",\n                id: \"addAdminBtn\",\n                className: \"btn px-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        id: \"tableDataField\",\n        children: selectedStaffList.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.branch\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.passwordHash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"edit\",\n                state: {\n                  item: item\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  color: \"\",\n                  bgColor: \"\",\n                  name: \"Edit\",\n                  id: item.id,\n                  className: \"btn editBtn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"\",\n                bgColor: \"\",\n                name: \"Delete\",\n                id: item.id,\n                className: \"btn deleteButton ms-1\",\n                onclick: () => DeleteStaff(item.id, selectedStaffList, setSelectedStaffList)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = ShowStaffs;\nexport function NewStaff(_ref2) {\n  _s();\n\n  let {\n    staffList,\n    selectedStaffList,\n    setSelectedStaffList\n  } = _ref2;\n  const [id, setId] = useState();\n  const [fullName, setFullName] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [passwordHash, setPasswordHash] = useState();\n  const [confirmpsdd, setconfirmpsdd] = useState();\n  const [branch, setBranch] = useState();\n\n  async function newStaffAction() {\n    if (confirmpsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Your Password Doesn't Match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this));\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json'\n      };\n      let finalHash = await Hash(passwordHash);\n      let bodyContent = JSON.stringify({\n        \"id\": id,\n        \"fullName\": fullName,\n        \"phone\": phone,\n        \"email\": email,\n        \"passwordHash\": finalHash,\n        \"branch\": branch\n      });\n      fetch(`${baseUrl}`, {\n        method: 'POST',\n        body: bodyContent,\n        headers: headersList\n      }).then(function (data) {\n        CheckApiResponse(data, data.json());\n      });\n      let newItem = JSON.parse(bodyContent);\n      UpdateAddState(selectedStaffList, setSelectedStaffList, newItem); // alert(\"yoo\")\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    id: \"add-admin-form\",\n    action: \"\",\n    method: \"\",\n    onSubmit: e => {\n      e.preventDefault();\n      newStaffAction();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeader\",\n      children: \"New Staff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fullName\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        required: true,\n        oninvalid: \"input_error('fullName')\",\n        onChange: e => {\n          setFullName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fullNameError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        className: \"form-control tel\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        required: true,\n        oninvalid: \"input_error('phone')\",\n        onChange: e => {\n          setPhone(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"phoneError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control email\",\n        id: \"email\",\n        placeholder: \"Email : example@email.com\",\n        name: \"email\",\n        required: true,\n        oninvalid: \"input_error('email')\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"branch\",\n        children: \"Branch:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control password\",\n        id: \"branch\",\n        placeholder: \"Branch\",\n        name: \"branch\",\n        required: true,\n        oninvalid: \"input_error('branch')\",\n        onChange: e => {\n          setBranch(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        required: true,\n        oninvalid: \"input_error('password')\",\n        onChange: e => {\n          setPasswordHash(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"confirmPassword\",\n        id: \"confirmPsdd\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        required: true,\n        oninvalid: \"input_error('confirmPassword')\",\n        onChange: e => {\n          setconfirmpsdd(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-customized buttonWider\",\n      id: \"addBtn\",\n      onSubmit: \"displayOverviewPage()\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewStaff, \"e1aui1QJB/fuX/Ce18J8tu+GnJ4=\");\n\n_c2 = NewStaff;\nexport function DeleteStaff(delId, selectedStaffList, setSelectedStaffList) {\n  let confirmation = window.confirm('you sure you want to delete the staff');\n\n  if (confirmation) {\n    fetch(`${baseUrl}/${delId}`, {\n      method: 'DELETE'\n    }).then(resp => {\n      resp.json();\n    });\n    let tempList = [];\n    selectedStaffList.map(item => {\n      if (item.id == delId) {} else {\n        tempList.push(item);\n      }\n    });\n    setSelectedStaffList(tempList);\n  }\n}\n_c3 = DeleteStaff;\nexport function EditStaff() {\n  _s2();\n\n  const location = useLocation();\n  const {\n    item\n  } = location.state;\n  let navigate = useNavigate();\n  const [id, setId] = useState(item.id);\n  const [fullName, setFullName] = useState(item.fullName);\n  const [phone, setPhone] = useState(item.phone);\n  const [email, setEmail] = useState(item.email);\n  const [passwordHash, setPasswordHash] = useState(item.passwordHash);\n  const [confirmPsdd, setconfirmPsdd] = useState(item.passwordHash);\n  const [branch, setBranch] = useState(item.branch);\n\n  function editStaffAction() {\n    if (confirmPsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Your Password Doesn't Match!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this));\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json'\n      };\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        branch\n      });\n      fetch(`${baseUrl}/${item.id}`, {\n        method: 'PATCH',\n        body: bodyContent,\n        headers: headersList\n      }).then(function (data) {\n        CheckApiResponse(data, data.json());\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    id: \"add-admin-form\",\n    action: \"\",\n    method: \"\",\n    onSubmit: e => {\n      editStaffAction();\n      e.preventDefault(); // console.log(data)\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"formHeader\",\n      children: \"Edit Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"fullName\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control \",\n        id: \"fullName\",\n        placeholder: \"Full Name\",\n        name: \"fullName\",\n        oninvalid: \"input_error('fullName')\",\n        onChange: e => {\n          setFullName(e.target.value);\n        },\n        value: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"fullNameError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"phone\",\n        children: \"Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        className: \"form-control tel\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        oninvalid: \"input_error('phone')\",\n        onChange: e => {\n          setPhone(e.target.value);\n        },\n        value: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"phoneError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"form-control email\",\n        id: \"email\",\n        placeholder: \"Email : example@email.com\",\n        name: \"email\",\n        oninvalid: \"input_error('email')\",\n        onChange: e => {\n          setEmail(e.target.value);\n        },\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"emailError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"branch\",\n        children: \"Branch:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control tel\",\n        id: \"branch\",\n        placeholder: \"Branch\",\n        name: \"branch\",\n        oninvalid: \"input_error('branch')\",\n        onChange: e => {\n          setBranch(e.target.value);\n        },\n        value: branch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"phoneError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        oninvalid: \"input_error('password')\",\n        onChange: e => {\n          setPasswordHash(e.target.value);\n        },\n        value: passwordHash\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"confirmPassword\",\n        id: \"confirmPsdd\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control password\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        name: \"confirmPassword\",\n        oninvalid: \"input_error('confirmPassword')\",\n        onChange: e => {\n          setconfirmPsdd(e.target.value);\n        },\n        value: confirmPsdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"confirmPasswordError\",\n        className: \"errorOutput\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"errorDisplay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-customized buttonWider\",\n      id: \"addBtn\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EditStaff, \"fvhwyYVEzor8ahKj/93rlm7qSq4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n\n_c4 = EditStaff;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ShowStaffs\");\n$RefreshReg$(_c2, \"NewStaff\");\n$RefreshReg$(_c3, \"DeleteStaff\");\n$RefreshReg$(_c4, \"EditStaff\");","map":{"version":3,"sources":["/home/kb/Desktop/Personal/projects/react parking/src/components/staff/staffActions.js"],"names":["Button","Link","useLocation","useNavigate","useState","ErrorDisplay","ReactDOM","CheckApiResponse","PageHeading","Hash","UpdateAddState","baseUrl","ShowStaffs","staffList","selectedStaffList","setSelectedStaffList","elementType","value","name","map","item","id","fullName","phone","email","branch","passwordHash","DeleteStaff","NewStaff","setId","setFullName","setPhone","setEmail","setPasswordHash","confirmpsdd","setconfirmpsdd","setBranch","newStaffAction","root","createRoot","document","getElementById","render","headersList","Accept","finalHash","bodyContent","JSON","stringify","fetch","method","body","headers","then","data","json","newItem","parse","e","preventDefault","target","delId","confirmation","window","confirm","resp","tempList","push","EditStaff","location","state","navigate","confirmPsdd","setconfirmPsdd","editStaffAction"],"mappings":"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","sourcesContent":["import Button from '../Button';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport ErrorDisplay from '../ErrorDisplay';\nimport * as ReactDOM from 'react-dom/client';\nimport { CheckApiResponse } from '../functions/CheckApiResponse';\nimport PageHeading from '../PageHeading';\nimport { Hash } from '../functions/Hash';\nimport UpdateAddState from '../functions/UpdateState';\n\nconst baseUrl = 'http://127.0.0.1:5000/token:qwhu67fv56frt5drfx45e/staffs';\n\nexport function ShowStaffs({\n  staffList,\n  selectedStaffList,\n  setSelectedStaffList,\n}) {\n  var elementType = [\n    { value: 'id', name: 'ID' },\n    { value: 'fullName', name: 'Full Name' },\n    { value: 'phone', name: 'Phone' },\n    { value: 'email', name: 'Email' },\n    { value: 'branch', name: 'Branch' },\n\n  ];\n\n  return (\n    <div className=\"\">\n      <PageHeading\n        userType=\"Staff\"\n        // onclick={() => alert('yello')}\n        fullData={staffList}\n        data={selectedStaffList}\n        setter={setSelectedStaffList}\n        elementType={elementType}\n      />{' '}\n      <table className=\"table table-striped\">\n        <tbody className=\"\">\n          <tr>\n            <th>Id</th>\n            <th>Full Name</th>\n            <th>Phone</th>\n            <th>Email</th>\n            <th>Branch</th>\n\n            <th>Password</th>\n            <th>\n              <Link to=\"new\">\n                <Button\n                  color=\"\"\n                  bgColor=\"var(--primary-color)\"\n                  name=\"Add Staff\"\n                  id=\"addAdminBtn\"\n                  className=\"btn px-4\"\n                />\n              </Link>\n            </th>\n          </tr>\n        </tbody>\n        <tbody id=\"tableDataField\">\n          {selectedStaffList.map((item) => {\n            return (\n              <tr>\n                <td>{item.id}</td>\n                <td>{item.fullName}</td>\n                <td>{item.phone}</td>\n                <td>{item.email}</td>\n                <td>{item.branch}</td>\n\n                <td>{item.passwordHash}</td>\n                <td>\n                  <Link to=\"edit\" state={{ item: item }}>\n                    <Button\n                      color=\"\"\n                      bgColor=\"\"\n                      name=\"Edit\"\n                      id={item.id}\n                      className=\"btn editBtn\"\n                    />\n                  </Link>\n\n                  <Button\n                    color=\"\"\n                    bgColor=\"\"\n                    name=\"Delete\"\n                    id={item.id}\n                    className=\"btn deleteButton ms-1\"\n                    onclick={() => DeleteStaff(item.id,selectedStaffList,setSelectedStaffList)}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport function NewStaff({\n  staffList,\n  selectedStaffList,\n  setSelectedStaffList,\n}) {\n\n  const [id, setId] = useState();\n  const [fullName, setFullName] = useState();\n  const [phone, setPhone] = useState();\n  const [email, setEmail] = useState();\n  const [passwordHash, setPasswordHash] = useState();\n  const [confirmpsdd, setconfirmpsdd] = useState();\n  const [branch, setBranch] = useState();\n\n  async function newStaffAction() {\n    if (confirmpsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n      root.render(\n        <ErrorDisplay\n          design=\"text-danger\"\n          message=\"Your Password Doesn't Match!\"\n        />\n      );\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json',\n      };\n\n      let finalHash= await Hash(passwordHash)\n\n      let bodyContent = JSON.stringify({\n        \"id\":id,\n        \"fullName\":fullName,\n        \"phone\":phone,\n        \"email\":email,\n        \"passwordHash\":finalHash,\n        \"branch\":branch,\n      });\n\n      fetch(`${baseUrl}`, {\n        method: 'POST',\n        body: bodyContent,\n        headers: headersList,\n      }).then(function (data) {\n        CheckApiResponse(data, data.json());\n      });\n\n      let newItem = JSON.parse(bodyContent)\n      UpdateAddState(selectedStaffList,\n        setSelectedStaffList,newItem)\n\n      // alert(\"yoo\")\n    }\n  }\n\n  return (\n    <form\n      className=\"form\"\n      id=\"add-admin-form\"\n      action=\"\"\n      method=\"\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        newStaffAction();\n      }}\n    >\n      <h1 id=\"formHeader\">New Staff</h1>\n      <div className=\"form-group\">\n        <label for=\"fullName\">Full Name:</label>\n        <input\n          type=\"text\"\n          className=\"form-control \"\n          id=\"fullName\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          required\n          oninvalid=\"input_error('fullName')\"\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n        />\n        <div id=\"fullNameError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"phone\">Phone:</label>\n        <input\n          type=\"tel\"\n          className=\"form-control tel\"\n          id=\"phone\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          required\n          oninvalid=\"input_error('phone')\"\n          onChange={(e) => {\n            setPhone(e.target.value);\n          }}\n        />\n        <div id=\"phoneError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          className=\"form-control email\"\n          id=\"email\"\n          placeholder=\"Email : example@email.com\"\n          name=\"email\"\n          required\n          oninvalid=\"input_error('email')\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n        />\n        <div id=\"emailError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"branch\">Branch:</label>\n        <input\n          type=\"text\"\n          className=\"form-control password\"\n          id=\"branch\"\n          placeholder=\"Branch\"\n          name=\"branch\"\n          required\n          oninvalid=\"input_error('branch')\"\n          onChange={(e) => {\n            setBranch(e.target.value);\n          }}\n        />\n        <div id=\"passwordError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          required\n          oninvalid=\"input_error('password')\"\n          onChange={(e) => {\n            setPasswordHash(e.target.value);\n          }}\n        />\n        <div id=\"passwordError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"confirmPassword\" id=\"confirmPsdd\">\n          Confirm Password:\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          name=\"confirmPassword\"\n          required\n          oninvalid=\"input_error('confirmPassword')\"\n          onChange={(e) => {\n            setconfirmpsdd(e.target.value);\n          }}\n        />\n        <div id=\"confirmPasswordError\" className=\"errorOutput\"></div>\n      </div>\n      <div id=\"errorDisplay\"></div>\n      <br />\n      <button\n        className=\"btn btn-customized buttonWider\"\n        id=\"addBtn\"\n        onSubmit=\"displayOverviewPage()\"\n      >\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport function DeleteStaff(delId,selectedStaffList,\n  setSelectedStaffList) {\n  let confirmation = window.confirm('you sure you want to delete the staff');\n\n  if (confirmation) {\n    fetch(`${baseUrl}/${delId}`, {\n      method: 'DELETE',\n    }).then((resp) => {\n      resp.json();\n    });\n\n    let tempList =[]\n\n    selectedStaffList.map((item)=>{\n      if(item.id==delId){ }else{tempList.push(item)}})\n    setSelectedStaffList(tempList)\n\n  }\n}\n\nexport function EditStaff() {\n  const location = useLocation();\n  const { item } = location.state;\n\n  let navigate = useNavigate();\n\n  const [id, setId] = useState(item.id);\n  const [fullName, setFullName] = useState(item.fullName);\n  const [phone, setPhone] = useState(item.phone);\n  const [email, setEmail] = useState(item.email);\n  const [passwordHash, setPasswordHash] = useState(item.passwordHash);\n  const [confirmPsdd, setconfirmPsdd] = useState(item.passwordHash);\n\n  const [branch, setBranch] = useState(item.branch);\n\n  function editStaffAction() {\n    if (confirmPsdd != passwordHash) {\n      const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n      root.render(\n        <ErrorDisplay\n          design=\"text-danger\"\n          message=\"Your Password Doesn't Match!\"\n        />\n      );\n    } else {\n      let headersList = {\n        Accept: '/Application/json',\n        'Content-Type': 'application/json',\n      };\n\n      let bodyContent = JSON.stringify({\n        id,\n        fullName,\n        phone,\n        email,\n        passwordHash,\n        branch,\n      });\n\n      fetch(`${baseUrl}/${item.id}`, {\n        method: 'PATCH',\n        body: bodyContent,\n        headers: headersList,\n      }).then(function (data) {\n        CheckApiResponse(data, data.json());\n      });\n    }\n  }\n  return (\n    <form\n      className=\"form\"\n      id=\"add-admin-form\"\n      action=\"\"\n      method=\"\"\n      onSubmit={(e) => {\n        editStaffAction();\n        e.preventDefault();\n        // console.log(data)\n      }}\n    >\n      <h1 id=\"formHeader\">Edit Admin</h1>\n      <div className=\"form-group\">\n        <label for=\"fullName\">Full Name:</label>\n        <input\n          type=\"text\"\n          className=\"form-control \"\n          id=\"fullName\"\n          placeholder=\"Full Name\"\n          name=\"fullName\"\n          oninvalid=\"input_error('fullName')\"\n          onChange={(e) => {\n            setFullName(e.target.value);\n          }}\n          value={fullName}\n        />\n        <div id=\"fullNameError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"phone\">Phone:</label>\n        <input\n          type=\"tel\"\n          className=\"form-control tel\"\n          id=\"phone\"\n          placeholder=\"Phone\"\n          name=\"phone\"\n          oninvalid=\"input_error('phone')\"\n          onChange={(e) => {\n            setPhone(e.target.value);\n          }}\n          value={phone}\n        />\n        <div id=\"phoneError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"email\">Email:</label>\n        <input\n          type=\"email\"\n          className=\"form-control email\"\n          id=\"email\"\n          placeholder=\"Email : example@email.com\"\n          name=\"email\"\n          oninvalid=\"input_error('email')\"\n          onChange={(e) => {\n            setEmail(e.target.value);\n          }}\n          value={email}\n        />\n        <div id=\"emailError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"branch\">Branch:</label>\n        <input\n          type=\"text\"\n          className=\"form-control tel\"\n          id=\"branch\"\n          placeholder=\"Branch\"\n          name=\"branch\"\n          oninvalid=\"input_error('branch')\"\n          onChange={(e) => {\n            setBranch(e.target.value);\n          }}\n          value={branch}\n        />\n        <div id=\"phoneError\" className=\"errorOutput\"></div>\n      </div>\n\n      <div className=\"form-group\">\n        <label for=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          oninvalid=\"input_error('password')\"\n          onChange={(e) => {\n            setPasswordHash(e.target.value);\n          }}\n          value={passwordHash}\n        />\n        <div id=\"passwordError\" className=\"errorOutput\"></div>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"confirmPassword\" id=\"confirmPsdd\">\n          Confirm Password:\n        </label>\n        <input\n          type=\"password\"\n          className=\"form-control password\"\n          id=\"confirmPassword\"\n          placeholder=\"Confirm Password\"\n          name=\"confirmPassword\"\n          oninvalid=\"input_error('confirmPassword')\"\n          onChange={(e) => {\n            setconfirmPsdd(e.target.value);\n          }}\n          value={confirmPsdd}\n        />\n        <div id=\"confirmPasswordError\" className=\"errorOutput\"></div>\n      </div>\n      <div id=\"errorDisplay\"></div>\n      <br />\n      <button className=\"btn btn-customized buttonWider\" id=\"addBtn\">\n        Save\n      </button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}