{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/Personal/projects/react parking/src/components/functions/CheckApiResponse.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport ErrorDisplay from '../ErrorDisplay';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function CheckApiResponse(apiResponse, message) {\n  _s();\n\n  let navigate = useNavigate();\n  let respMessage = await message.then(result => result.message);\n  console.log(respMessage);\n  const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n  switch (apiResponse.status) {\n    case 200:\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-success\",\n        message: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this));\n      localStorage.setItem('loggedIn', true); // navigate('../');\n\n      window.location.reload();\n      break;\n\n    case 400:\n      if (respMessage == 'INVALID_CALL:|:USER_PHONE_ALREADY_IN_USE') {\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"Phone already registered use different one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this));\n      } else {\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"You have incomplete credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this));\n      }\n\n      break;\n\n    case 501:\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Sorry we're currently experiencing technical difficulties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this));\n      break;\n\n    default:\n      break;\n  }\n}\n\n_s(CheckApiResponse, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CheckApiResponse;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckApiResponse\");","map":{"version":3,"sources":["/home/kb/Desktop/Personal/projects/react parking/src/components/functions/CheckApiResponse.js"],"names":["React","ReactDOM","ErrorDisplay","useNavigate","CheckApiResponse","apiResponse","message","navigate","respMessage","then","result","console","log","root","createRoot","document","getElementById","status","render","localStorage","setItem","window","location","reload"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAIA,OAAO,eAAeC,gBAAf,CAAgCC,WAAhC,EAA6CC,OAA7C,EAAsD;AAAA;;AACzD,MAAIC,QAAQ,GAAGJ,WAAW,EAA1B;AACA,MAAIK,WAAW,GAAG,MAAMF,OAAO,CAACG,IAAR,CAAcC,MAAD,IAAYA,MAAM,CAACJ,OAAhC,CAAxB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,QAAMK,IAAI,GAAGZ,QAAQ,CAACa,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB,CAAb;;AAEA,UAAQX,WAAW,CAACY,MAApB;AACE,SAAK,GAAL;AACEJ,MAAAA,IAAI,CAACK,MAAL,eAAY,QAAC,YAAD;AAAc,QAAA,MAAM,EAAC,cAArB;AAAoC,QAAA,OAAO,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAAZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC,EAFF,CAGE;;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AAEA;;AAEF,SAAK,GAAL;AACE,UAAIf,WAAW,IAAI,0CAAnB,EAA+D;AAC7DK,QAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,UAAA,MAAM,EAAC,aADT;AAEE,UAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAOO;AACLL,QAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,UAAA,MAAM,EAAC,aADT;AAEE,UAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;;AAED;;AAEF,SAAK,GAAL;AACEL,MAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADF;AAMA;;AACF;AACE;AArCJ;AAwCH;;GA/CqBd,gB;UACHD,W;;;KADGC,gB","sourcesContent":["import React from 'react'\nimport * as ReactDOM from 'react-dom/client';\nimport ErrorDisplay from '../ErrorDisplay';\nimport { useNavigate } from 'react-router-dom';\n\n\n\nexport async function CheckApiResponse(apiResponse, message) {\n    let navigate = useNavigate();\n    let respMessage = await message.then((result) => result.message);\n\n    console.log(respMessage);\n    const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n    switch (apiResponse.status) {\n      case 200:\n        root.render(<ErrorDisplay design=\"text-success\" message=\"Success\" />);\n        localStorage.setItem('loggedIn', true);\n        // navigate('../');\n        window.location.reload();\n\n        break;\n\n      case 400:\n        if (respMessage == 'INVALID_CALL:|:USER_PHONE_ALREADY_IN_USE') {\n          root.render(\n            <ErrorDisplay\n              design=\"text-danger\"\n              message=\"Phone already registered use different one!\"\n            />\n          );\n        } else {\n          root.render(\n            <ErrorDisplay\n              design=\"text-danger\"\n              message=\"You have incomplete credentials\"\n            />\n          );\n        }\n\n        break;\n\n      case 501:\n        root.render(\n          <ErrorDisplay\n            design=\"text-danger\"\n            message=\"Sorry we're currently experiencing technical difficulties\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}