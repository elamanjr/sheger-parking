{"ast":null,"code":"var _jsxFileName = \"/home/kb/Desktop/Personal/projects/react parking/src/components/functions/checkApiResponse.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate } from \"react-router-dom\";\nimport React from 'react';\nimport * as ReactDOM from 'react-dom/client';\nimport ErrorDisplay from \"../ErrorDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport async function CheckApiResponse(_ref) {\n  _s();\n\n  let {\n    apiResponse,\n    message\n  } = _ref;\n  alert(\"apiResponse\");\n  let navigate = useNavigate();\n  let respMessage = await message.then(result => result.message);\n  console.log(respMessage);\n  const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n  switch (apiResponse.status) {\n    case 200:\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-success\",\n        message: \"Success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this));\n      localStorage.setItem('loggedIn', true); // navigate(\"../\")\n      // window.location.reload()\n\n      break;\n\n    case 400:\n      if (respMessage == \"INVALID_CALL:|:USER_PHONE_ALREADY_IN_USE\") {\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"Phone already registered use different one!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this));\n      } else {\n        root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n          design: \"text-danger\",\n          message: \"You have incomplete credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this));\n      }\n\n      break;\n\n    case 501:\n      root.render( /*#__PURE__*/_jsxDEV(ErrorDisplay, {\n        design: \"text-danger\",\n        message: \"Sorry we're currently experiencing technical difficulties\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this));\n      break;\n\n    default:\n      break;\n  }\n}\n\n_s(CheckApiResponse, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CheckApiResponse;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckApiResponse\");","map":{"version":3,"sources":["/home/kb/Desktop/Personal/projects/react parking/src/components/functions/checkApiResponse.js"],"names":["useNavigate","React","ReactDOM","ErrorDisplay","CheckApiResponse","apiResponse","message","alert","navigate","respMessage","then","result","console","log","root","createRoot","document","getElementById","status","render","localStorage","setItem"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAIA,OAAO,eAAeC,gBAAf,OAAuD;AAAA;;AAAA,MAAvB;AAACC,IAAAA,WAAD;AAAaC,IAAAA;AAAb,GAAuB;AAC1DC,EAAAA,KAAK,CAAC,aAAD,CAAL;AAEA,MAAIC,QAAQ,GAAGR,WAAW,EAA1B;AAGA,MAAIS,WAAW,GAAG,MAAMH,OAAO,CAACI,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACL,OAA9B,CAAxB;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,QAAMK,IAAI,GAAGZ,QAAQ,CAACa,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAApB,CAAb;;AAEA,UAAQZ,WAAW,CAACa,MAApB;AACE,SAAK,GAAL;AACEJ,MAAAA,IAAI,CAACK,MAAL,eAAY,QAAC,YAAD;AAAc,QAAA,MAAM,EAAC,cAArB;AAAoC,QAAA,OAAO,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAAZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgC,IAAhC,EAFF,CAGE;AACA;;AAEA;;AAEF,SAAK,GAAL;AACE,UAAGZ,WAAW,IAAE,0CAAhB,EAA2D;AACzDK,QAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,UAAA,MAAM,EAAC,aADT;AAEE,UAAA,OAAO,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD,OAPD,MAQI;AACFL,QAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,UAAA,MAAM,EAAC,aADT;AAEE,UAAA,OAAO,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA,gBADF;AAMD;;AAED;;AAEF,SAAK,GAAL;AACEL,MAAAA,IAAI,CAACK,MAAL,eACE,QAAC,YAAD;AACE,QAAA,MAAM,EAAC,aADT;AAEE,QAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,cADF;AAMA;;AACF;AACE;AAtCJ;AA0CD;;GArDmBf,gB;UAGHJ,W;;;KAHGI,gB","sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nimport React from 'react'\nimport * as ReactDOM from 'react-dom/client';\nimport ErrorDisplay from \"../ErrorDisplay\";\n\n\n\nexport async function CheckApiResponse({apiResponse,message}) {\n    alert(\"apiResponse\")\n\n    let navigate = useNavigate();\n\n\n    let respMessage = await message.then(result => result.message);\n\n    console.log(respMessage)\n    const root = ReactDOM.createRoot(document.getElementById('errorDisplay'));\n\n    switch (apiResponse.status) {\n      case 200:\n        root.render(<ErrorDisplay design=\"text-success\" message=\"Success\" />);\n        localStorage.setItem('loggedIn',true)        \n        // navigate(\"../\")\n        // window.location.reload()\n\n        break;\n\n      case 400:\n        if(respMessage==\"INVALID_CALL:|:USER_PHONE_ALREADY_IN_USE\"){\n          root.render(\n            <ErrorDisplay\n              design=\"text-danger\"\n              message= \"Phone already registered use different one!\"\n            />\n          );\n        }\n        else{\n          root.render(\n            <ErrorDisplay\n              design=\"text-danger\"\n              message= \"You have incomplete credentials\"\n            />\n          );\n        }\n        \n        break;\n\n      case 501:\n        root.render(\n          <ErrorDisplay\n            design=\"text-danger\"\n            message=\"Sorry we're currently experiencing technical difficulties\"\n          />\n        );\n        break;\n      default:\n        break;\n    }\n\n    \n  }\n"]},"metadata":{},"sourceType":"module"}