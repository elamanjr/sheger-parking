{"ast":null,"code":"import React from 'react';\nexport default function UpdateAddState(itemList, setItemList, newItem) {}\n_c = UpdateAddState;\nexport function UpdateRemoveState(remId, itemList, setItemList) {\n  let tempList = [];\n  itemList.map(item => {\n    if (item.id != remId) {\n      tempList.push(item);\n    }\n  });\n  setItemList(tempList);\n}\n_c2 = UpdateRemoveState;\nexport function UpdateEditState(editId, itemList, setItemList, newItem) {\n  let tempList = [];\n  itemList.map(item => {\n    if (item.id == editId) {\n      tempList.push(newItem);\n    } else {\n      tempList.push(item);\n    }\n  });\n  setItemList(tempList);\n}\n_c3 = UpdateEditState;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"UpdateAddState\");\n$RefreshReg$(_c2, \"UpdateRemoveState\");\n$RefreshReg$(_c3, \"UpdateEditState\");","map":{"version":3,"sources":["/home/kb/Desktop/Personal/projects/react parking/src/components/functions/UpdateState.js"],"names":["React","UpdateAddState","itemList","setItemList","newItem","UpdateRemoveState","remId","tempList","map","item","id","push","UpdateEditState","editId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,QAAxB,EAAkCC,WAAlC,EAA+CC,OAA/C,EAAwD,CAGtE;KAHuBH,c;AAKxB,OAAO,SAASI,iBAAT,CAA2BC,KAA3B,EAAiCJ,QAAjC,EAA0CC,WAA1C,EAAuD;AAC1D,MAAII,QAAQ,GAAG,EAAf;AAEAL,EAAAA,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AACrB,QAAIA,IAAI,CAACC,EAAL,IAAWJ,KAAf,EAAsB;AACpBC,MAAAA,QAAQ,CAACI,IAAT,CAAcF,IAAd;AACD;AACF,GAJD;AAKAN,EAAAA,WAAW,CAACI,QAAD,CAAX;AAEH;MAVeF,iB;AAYhB,OAAO,SAASO,eAAT,CAAyBC,MAAzB,EAAiCX,QAAjC,EAA2CC,WAA3C,EAAwDC,OAAxD,EAAiE;AAEpE,MAAIG,QAAQ,GAAG,EAAf;AACAL,EAAAA,QAAQ,CAACM,GAAT,CAAcC,IAAD,IAAU;AACvB,QAAIA,IAAI,CAACC,EAAL,IAAWG,MAAf,EAAuB;AACnBN,MAAAA,QAAQ,CAACI,IAAT,CAAcP,OAAd;AACH,KAFD,MAEO;AACHG,MAAAA,QAAQ,CAACI,IAAT,CAAcF,IAAd;AACH;AACJ,GANG;AAOFN,EAAAA,WAAW,CAACI,QAAD,CAAX;AAED;MAZeK,e","sourcesContent":["import React from 'react';\n\nexport default function UpdateAddState(itemList, setItemList, newItem) {\n\n\n}\n\nexport function UpdateRemoveState(remId,itemList,setItemList) {\n    let tempList = [];\n\n    itemList.map((item) => {\n      if (item.id != remId) {\n        tempList.push(item);\n      }\n    });\n    setItemList(tempList);\n \n}\n\nexport function UpdateEditState(editId, itemList, setItemList, newItem) {\n  \n    let tempList = [];\n    itemList.map((item) => {\n    if (item.id == editId) {\n        tempList.push(newItem);\n    } else {\n        tempList.push(item);\n    }\n});\n  setItemList(tempList);\n  \n}\n"]},"metadata":{},"sourceType":"module"}